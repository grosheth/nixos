{
  "redhat.telemetry.enabled": false,
  "editor.codeActionsOnSave": {},
  "editor.fastScrollSensitivity": 5,
  "editor.smoothScrolling": true,
  "workbench.colorCustomizations": {
    "activityBar.background": "#0d1925",
    "activityBar.foreground": "#ffffff",
    "activityBarTop.foreground": "#0d1925",
    "editorCursor.foreground": "#ffffff",
    "editorLineNumber.activeForeground": "#ffffff",
    "editorGutter.background": "#14161b",
    "editor.selectionBackground": "#585b7080",
    "editor.lineHighlightBackground": "#585b7080",
    "editor.background": "#14161b",
    "editorBracketHighlight.foreground1": "#9399b2",
    "editorBracketHighlight.foreground2": "#9399b2",
    "editorBracketHighlight.foreground3": "#9399b2",
    "editorBracketHighlight.foreground4": "#9399b2",
    "editorBracketHighlight.foreground5": "#9399b2",
    "editorBracketHighlight.foreground6": "#9399b2",
    "input.background": "#14161b",
    "input.foreground": "#ffffff",
    "input.border": "#0db9d7",
    "input.placeholderForeground": "#0db9d7",
    "inputOption.activeBorder": "#0db9d7",
    "inputValidation.errorBackground": "#e55c74",
    "inputValidation.errorForeground": "#ffffff",
    "inputValidation.errorBorder": "#e55c74",
    "inputValidation.infoBackground": "#0db9d7",
    "inputValidation.infoForeground": "#ffffff",
    "inputValidation.infoBorder": "#0db9d7",
    "inputValidation.warningBackground": "#eed891",
    "inputValidation.warningForeground": "#ffffff",
    "inputValidation.warningBorder": "#eed891",
    "button.background": "#0db9d7",
    "button.foreground": "#ffffff",
    "button.hoverBackground": "#0db9d7",
    "button.secondaryBackground": "#0db9d7",
    "button.secondaryForeground": "#ffffff",
    "button.secondaryHoverBackground": "#0db9d7",
    "checkbox.background": "#14161b",
    "checkbox.foreground": "#ffffff",
    "checkbox.border": "#0db9d7",
    "badge.background": "#e55c74",
    "badge.foreground": "#ffffff",
    "breadcrumb.background": "#14161b",
    "breadcrumb.foreground": "#ffffff",
    "breadcrumb.focusForeground": "#0db9d7",
    "breadcrumb.activeSelectionForeground": "#0db9d7",
    "breadcrumbPicker.background": "#14161b",
    "debugToolBar.background": "#14161b",
    "descriptionForeground": "#ffffff",
    "panel.background": "#14161b",
    "panelSectionHeader.background": "#14161b",
    "quickInput.background": "#14161b",
    "quickInput.foreground": "#ffffff",
    "quickInputTitle.background": "#e55c74",
    "pickerGroup.foreground": "#ffffff",
    "pickerGroup.border": "#3a3d41",
    "sideBar.background": "#14161b",
    "terminal.background": "#14161b",
    "terminal.foreground": "#ffffff",
    "terminal.ansiGreen": "#6dd797",
    "terminal.ansiRed": "#e55c74",
    "terminal.ansiYellow": "#eed891",
    "terminal.ansiBlue": "#0db9d7",
    "terminal.ansiMagenta": "#bb9af7",
    "terminal.ansiCyan": "#6bd9db",
    "terminal.ansiBrightCyan": "#ffffff"
  },
  "editor.tokenColorCustomizations": {
    // "comments": "#4b5254",
    "comments": "#818181",
    "strings": "#6dd797",
    "keywords": "#e55c74",
    "numbers": "#eed891",
    "types": "#eed891",
    "functions": "#ffffff",
    "variables": "#ffffff",
    "textMateRules": [
      {
        "scope": "meta.structure.dictionary.json string.quoted.double.json",
        "settings": {
          "foreground": "#e55c74" // Color for JSON keys
        }
      },
      {
        "scope": "meta.structure.dictionary.json string.quoted.double.json punctuation.definition.string.json",
        "settings": {
          "foreground": "#ffffff" // Color for JSON key quotes
        }
      },
      {
        "scope": "meta.structure.dictionary.value.json string.quoted.double.json",
        "settings": {
          "foreground": "#6dd797" // Color for JSON string values
        }
      },
      {
        "scope": "meta.structure.dictionary.json string.quoted.double.json punctuation.definition.string.json",
        "settings": {
          "foreground": "#0db9d7" // Color for JSON key quotes
        }
      },
      {
        "scope": "meta.structure.dictionary.value.json string.quoted.double.json",
        "settings": {
          "foreground": "#6dd797" // Color for JSON string values
        }
      },
      {
        "scope": "meta.structure.dictionary.value.json constant.numeric.json",
        "settings": {
          "foreground": "#bb9af7" // Color for JSON numeric values
        }
      },
      {
        "scope": "meta.structure.dictionary.value.json constant.language.json",
        "settings": {
          "foreground": "#0db9d7" // Color for JSON boolean values (true/false)
        }
      },
      {
        "scope": "meta.structure.dictionary.value.json constant.language.null.json",
        "settings": {
          "foreground": "#0db9d7" // Color for JSON null values
        }
      },
      {
        "scope": "punctuation.separator.dictionary.pair.json",
        "settings": {
          "foreground": "#ffffff" // Color for JSON colons
        }
      },
      {
        "scope": "punctuation.separator.array.json",
        "settings": {
          "foreground": "#ffffff" // Color for JSON commas
        }
      },
      // rust
      {
        "scope": "meta.use.rust",
        "settings": {
          "foreground": "#ffffff" // Color for Rust use statements
        }
      },
      {
        "scope": "keyword.rust",
        "settings": {
          "foreground": "#e55c74" // Color for Rust keywords
        }
      },
      {
        "scope": "entity.name.type.rust",
        "settings": {
          "foreground": "#0db9d7" // Color for Rust types
        }
      },
      {
        "scope": "entity.function.name.rust",
        "settings": {
          "foreground": "#0db9d7" // Color for Rust function names
        }
      },
      {
        "scope": "entity.name.function.rust",
        "settings": {
          "foreground": "#bb9af7" // Color for Rust functions
        }
      },
      {
        "scope": "variable.rust",
        "settings": {
          "foreground": "#6dd797" // Color for Rust variables
        }
      },
      {
        "scope": "string.quoted.double.rust",
        "settings": {
          "foreground": "#6dd797" // Color for Rust string literals
        }
      },
      {
        "scope": "constant.numeric.rust",
        "settings": {
          "foreground": "#eed891" // Color for Rust numeric literals
        }
      },
      {
        "scope": "comment.line.double-slash.rust",
        "settings": {
          "foreground": "#818181" // Color for Rust comments
        }
      },
      {
        "scope": "keyword.other.rust",
        "settings": {
          "foreground": "#6dd797" // Color for Rust other keywords
        }
      },
      {
        "scope": "support.type.rust",
        "settings": {
          "foreground": "#0db9d7" // Color for Rust types
        }
      },
      {
        "scope": "support.constant.rust",
        "settings": {
          "foreground": "#0db9d7" // Color for Rust constants
        }
      },
      {
        "scope": "entity.name.namespace.rust",
        "settings": {
          "foreground": "#0db9d7" // Color for Rust namespaces
        }
      },
      {
        "scope": "meta.use.rust entity.name.function.rust",
        "settings": {
          "foreground": "#bb9af7" // Color for Rust function calls from libraries in use statements
        }
      },
      // Python
      {
        "scope": "meta.use.python",
        "settings": {
          "foreground": "#ffffff" // Color for Python use statements
        }
      },
      {
        "scope": "keyword.control.python",
        "settings": {
          "foreground": "#e55c74" // Color for Python control keywords
        }
      },
      {
        "scope": "variable.parameter.function.python",
        "settings": {
          "foreground": "#9cdcfe" // Color for Python function parameters
        }
      },
      {
        "scope": "entity.name.function.python",
        "settings": {
          "foreground": "#bb9af7" // Color for Python function names
        }
      },
      {
        "scope": "string.quoted.double.python",
        "settings": {
          "foreground": "#6dd797" // Color for Python string literals
        }
      },
      {
        "scope": "constant.numeric.python",
        "settings": {
          "foreground": "#eed891" // Color for Python numeric literals
        }
      },
      {
        "scope": "comment.line.number-sign.python",
        "settings": {
          "foreground": "#818181" // Color for Python comments
        }
      },
      // Go
      {
        "scope": "storage.type.error.go",
        "settings": {
          "foreground": "#eed891" // Color for Nix control keywords
        }
      },
      {
        "scope": "constant.other.placeholder.go",
        "settings": {
          "foreground": "#6dd797" // Color for Nix control keywords
        }
      },
      {
        "scope": "entity.name.function.go",
        "settings": {
          "foreground": "#0db9d7" // Color for Nix control keywords
        }
      },
      {
        "scope": "storage.type.boolean.go",
        "settings": {
          "foreground": "#eed891" // Color for Nix control keywords
        }
      },
      {
        "scope": "storage.type.numeric.go",
        "settings": {
          "foreground": "#eed891" // Color for Nix control keywords
        }
      },
      {
        "scope": "storage.type.string.go",
        "settings": {
          "foreground": "#eed891" // Color for Nix control keywords
        }
      },
      {
        "scope": "keyword.struct.go",
        "settings": {
          "foreground": "#e55c74" // Color for Nix control keywords
        }
      },
      {
        "scope": "keyword.type.go",
        "settings": {
          "foreground": "#e55c74" // Color for Nix control keywords
        }
      },
      {
        "scope": "keyword.function.go",
        "settings": {
          "foreground": "#e55c74" // Color for Nix control keywords
        }
      },
      {
        "scope": "keyword.var.go",
        "settings": {
          "foreground": "#e55c74" // Color for Nix control keywords
        }
      },
      {
        "scope": "constant.language.boolean.go",
        "settings": {
          "foreground": "#eed891" // Color for Nix control keywords
        }
      },
      {
        "scope": "variable.other.constant.go",
        "settings": {
          "foreground": "#fab387" // Color for Nix control keywords
        }
      },
      {
        "scope": "constant.language.null.go",
        "settings": {
          "foreground": "#fab387" // Color for Nix control keywords
        }
      },
      {
        "scope": "entity.name.function.support.go",
        "settings": {
          "foreground": "#0db9d7" // Color for Nix control keywords
        }
      },
      // nix
      {
        "scope": "keyword.other.nix",
        "settings": {
          "foreground": "#e55c74" // Color for Nix control keywords
        }
      },
      {
        "scope": "punctuation.section.embedded.begin.nix",
        "settings": {
          "foreground": "#e55c74" // Color for Nix control keywords
        }
      },
      {
        "scope": "punctuation.section.embedded.end.nix",
        "settings": {
          "foreground": "#e55c74" // Color for Nix control keywords
        }
      },
      {
        "scope": "keyword.operator.nix",
        "settings": {
          "foreground": "#eba0ac" // Color for Nix control keywords
        }
      },
      {
        "scope": "variable.parameter.function.4.nix",
        "settings": {
          "foreground": "#eba0ac" // Color for Nix control keywords
        }
      },
      {
        "scope": "variable.parameter.function.1.nix",
        "settings": {
          "foreground": "#eba0ac" // Color for Nix control keywords
        }
      },
      {
        "scope": "support.function",
        "settings": {
          "foreground": "#bb9af7" // Color for Nix control keywords
        }
      },
      {
        "scope": "keyword.other.inherit.nix",
        "settings": {
          "foreground": "#e55c74" // Color for Nix string literals
        }
      },
      {
        "scope": "constant.language.nix",
        "settings": {
          "foreground": "#eed891" // Color for Nix string literals
        }
      },
      {
        "scope": "entity.other.attribute-name",
        "settings": {
          "foreground": "#ffffff" // Color for Nix string literals
        }
      },
      {
        "scope": "entity.other.attribute-name",
        "settings": {
          "foreground": "#ffffff" // Color for Nix string literals
        }
      },
      {
        "scope": "variable.parameter.function.nix",
        "settings": {
          "foreground": "#0db9d7" // Color for Nix function parameters
          // "foreground": "#ffffff" // Color for Nix string literals
        }
      },
      {
        "scope": "entity.name.function.nix",
        "settings": {
          "foreground": "#bb9af7" // Color for Nix function names
        }
      },
      {
        "scope": "string.quoted.double.nix",
        "settings": {
          "foreground": "#6dd797" // Color for YAML plain strings
        }
      },
      {
        "scope": "constant.numeric.nix",
        "settings": {
          "foreground": "#eed891" // Color for Nix numeric literals
        }
      },
      {
        "scope": "comment.line.number-sign.nix",
        "settings": {
          "foreground": "#818181" // Color for Nix comments
        }
      },
      // shell
      {
        "scope": "keyword.control.shell",
        "settings": {
          "foreground": "#e55c74" // Color for Bash control keywords
        }
      },
      {
        "scope": "variable.parameter.shell",
        "settings": {
          "foreground": "#9cdcfe" // Color for Bash function parameters
        }
      },
      {
        "scope": "entity.name.function.shell",
        "settings": {
          "foreground": "#bb9af7" // Color for Bash function names
        }
      },
      {
        "scope": "string.quoted.double.shell",
        "settings": {
          "foreground": "#6dd797" // Color for Bash string literals
        }
      },
      {
        "scope": "constant.numeric.shell",
        "settings": {
          "foreground": "#eed891" // Color for Bash numeric literals
        }
      },
      {
        "scope": "comment.line.number-sign.shell",
        "settings": {
          "foreground": "#818181" // Color for Bash comments
        }
      },
    ]
  },
  "editor.lineHeight": 0,
  "editor.letterSpacing": -0.4,
  "editor.fontWeight": "normal",
  "editor.renderWhitespace": "none",
  "editor.minimap.enabled": false,
  "breadcrumbs.enabled": false,
  "workbench.iconTheme": "material-icon-theme",
  "update.showReleaseNotes": false,
  "zenMode.hideLineNumbers": false,
  "editor.lineNumbers": "relative",
  "vim.useSystemClipboard": true,
  "vim.leader": "<Space>",
  "vim.hlsearch": true,
  "vim.normalModeKeyBindingsNonRecursive": [
    // NAVIGATION
    { "before": ["<S-h>"], "commands": [":bprevious"] },
    { "before": ["<S-l>"], "commands": [":bnext"] },
    {
      "before": ["s"],
      "commands": ["leap.findForward"]
    },
    {
      "before": ["S"],
      "commands": ["leap.findBackward"]
    },
    // splits
    { "before": ["leader", "v"], "commands": [":vsplit"] },
    { "before": ["leader", "s"], "commands": [":split"] },
    // panes
    {
      "before": ["leader", "h"],
      "commands": ["workbench.action.focusLeftGroup"]
    },
    {
      "before": ["leader", "j"],
      "commands": ["workbench.action.focusBelowGroup"]
    },
    {
      "before": ["leader", "k"],
      "commands": ["workbench.action.focusAboveGroup"]
    },
    {
      "before": ["leader", "l"],
      "commands": ["workbench.action.focusRightGroup"]
    },
    // NICE TO HAVE
    { "before": ["leader", "w"], "commands": [":w!"] },
    { "before": ["leader", "q"], "commands": [":q!"] },
    { "before": ["leader", "x"], "commands": [":x!"] },
    {
      "before": ["[", "d"],
      "commands": ["editor.action.marker.prev"]
    },
    {
      "before": ["]", "d"],
      "commands": ["editor.action.marker.next"]
    },
    {
      "before": ["<leader>", "c", "a"],
      "commands": ["editor.action.quickFix"]
    },
    { "before": ["leader", "f"], "commands": ["workbench.action.quickOpen"] },
    { "before": ["leader", "p"], "commands": ["editor.action.formatDocument"] },
    {
      "before": ["g", "h"],
      "commands": ["editor.action.showDefinitionPreviewHover"]
    },
    // toggle comment selection
    { "before": ["g", "c", "c"], "commands": ["editor.action.commentLine"] }
  ],
  "vim.visualModeKeyBindings": [
    // Stay in visual mode while indenting
    { "before": ["<"], "commands": ["editor.action.outdentLines"] },
    { "before": [">"], "commands": ["editor.action.indentLines"] },
    // Move selected lines while staying in visual mode
    { "before": ["J"], "commands": ["editor.action.moveLinesDownAction"] },
    { "before": ["K"], "commands": ["editor.action.moveLinesUpAction"] },
    // toggle comment selection
    { "before": ["g", "c"], "commands": ["editor.action.commentLine"] }
  ],
  "workbench.activityBar.location": "hidden",
  "editor.fontLigatures": true,
  "editor.fontFamily": "JetBrainsMono Nerd Font Mono",
  "window.zoomLevel": 0.2,
  "debug.disassemblyView.showSourceCode": false,
  "files.autoSave": "afterDelay"
}